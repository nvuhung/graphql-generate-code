{"version":3,"sources":["theme/styled-components.ts","components/Input.tsx","theme/theme.ts","components/Button.tsx","utils/CommonUtils.ts","components/Ul.tsx","components/Li.tsx","components/History.tsx","components/Wrapper.tsx","components/SchemaList.tsx","components/Header.tsx","components/Form.tsx","components/CodeMirror.tsx","utils/TemplateBuilder.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["styledComponents","styled","default","ThemeProvider","css","createGlobalStyle","keyframes","Input","input","_templateObject","props","theme","primaryColor","ThemeDefault","secondaryColor","borderColor","ButtonPrimary","Button_templateObject","ButtonRemove","_templateObject2","isGraphQLNonNull","object","isGraphQLList","isGraphQLScalarType","filterSchema","schemas","arguments","length","undefined","textSearch","filter","item","name","toLowerCase","includes","Ul","ul","Ul_templateObject","LiActive","Li_templateObject","HistoryUl","History_templateObject","History","_ref","histories","uri","onSelect","onRemove","react_default","a","createElement","map","history","key","onClick","className","type","value","event","stopPropagation","Wrapper","div","Wrapper_templateObject","Column","Wrapper_templateObject2","SchemaContainer","_templateObject3","hasBorder","SchemaHeader","_templateObject4","Container","SchemaList_templateObject","SchemaUl","SchemaList_templateObject2","List","list","schemaType","schemaNameSelected","schema","SchemaList","_ref2","queries","mutations","SchemaList_List","HeaderStyled","Header_templateObject","Header","Form","form","Form_templateObject","CodeMirror","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","elementRef","editor","cachedValue","inherits","createClass","require","mode","lineNumbers","readOnly","prevProps","thisValue","setValue","_this2","style","height","ref","React","Component","json2ts","prettier","prettierBabylon","prettierGraphql","prettierTS","scalarToTypescript","Int","Float","String","Boolean","ID","Date","Email","getFields","ofType","getResponseObj","deepKeys","parentIndex","keys","obj","forEach","fields","schemaName","getSchemaName","find","k","index","push","error","GetAllTemplates","args","rs","arg","str","concat","join","getArgs","params","getParams","jsonQuery","jsonToGraphQLQuery","graphlStr","graphql","format","parser","printWidth","plugins","typescript","prettifyTS","JSON","stringify","App_templateObject","App","state","schemaSelected","textSearchSchema","localStorage","getItem","setState","parse","alert","setItem","unshift","updateHistory","findIndex","h","splice","url","showLinkError","link","HttpLink","fetch","introspectSchema","queriesObj","getQueryType","mutationsObj","getMutationType","addHistory","v","objectSpread","_this$state","CodeMirror_CodeMirror","_this$state2","History_History","handleSubmit","removeHistory","_this3","onSubmit","preventDefault","placeholder","onChange","target","_this4","_this$state3","queriesFiltered","mutationsFiltered","Fragment","padding","display","SchemaList_SchemaList","_GetAllTemplates","Header_Header","react_split_es","flexDirection","direction","minSize","sizes","_renderForm","_renderHistory","_renderSchema","_renderResult","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.315c4758.chunk.js","sourcesContent":["import * as styledComponents from 'styled-components';\n\nexport interface ThemeInterface {\n  primaryColor: string;\n  secondaryColor: string;\n  borderColor: string;\n}\n\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<\n  ThemeInterface\n>;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\nexport default styled;\n","import styled from '../theme/styled-components';\n\nexport const Input = styled.input`\n  border: 1px solid;\n  border-color: ${props => props.theme.primaryColor};\n  border-radius: 40px;\n  height: 35px;\n  padding: 4px 15px;\n  width: 100%;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { ThemeInterface } from './styled-components';\n\nexport const ThemeDefault: ThemeInterface = {\n  primaryColor: '#2185d0',\n  secondaryColor: '#53b5ff',\n  borderColor: '#ccc'\n};\n","import styled from '../theme/styled-components';\n\nexport const ButtonPrimary = styled.input`\n  cursor: pointer;\n  padding: 10px 20px;\n  background-color: ${props => props.theme.primaryColor};\n  color: #fff;\n  text-align: center;\n  line-height: 14px;\n  border-radius: 40px;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  margin-left: 10px;\n\n  &:hover {\n    background-color: ${props => props.theme.secondaryColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ButtonRemove = styled.input`\n  outline: none;\n  box-shadow: none;\n  border-radius: 50%;\n  cursor: pointer;\n  border: solid 1px red;\n  color: red;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { GraphQLNonNull, GraphQLList, GraphQLScalarType } from 'graphql';\n\nexport const isGraphQLNonNull = (object: any): object is GraphQLNonNull<any> =>\n  'ofType' in object;\n\nexport const isGraphQLList = (object: any): object is GraphQLList<any> =>\n  'ofType' in object;\n\nexport const isGraphQLScalarType = (object: any): object is GraphQLScalarType =>\n  'name' in object;\n\nexport const isValidUri = (url: string): boolean =>\n  !!url && url.includes('http') && url.includes('/graphql');\n\nexport const filterSchema = (schemas: any[] = [], textSearch: string = '') =>\n  schemas.filter(item =>\n    item.name.toLowerCase().includes(textSearch.toLowerCase())\n  );\n\nexport const getDeepKeys = obj => {\n  let keys: string[] = [];\n  for (var key in obj) {\n    keys.push(key);\n    if (typeof obj[key] === 'object') {\n      const subkeys = getDeepKeys(obj[key]);\n      keys = keys.concat(\n        subkeys.map(function(subkey) {\n          return key + '.' + subkey;\n        })\n      );\n    }\n  }\n  return keys;\n};\n","import styled from '../theme/styled-components';\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;","import styled from '../theme/styled-components';\n\nexport const LiActive = styled('li')<{ active?: boolean }>`\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: solid 1px;\n  border-color: ${props => props.theme.borderColor};\n  display: flex;\n  justify-content: space-between;\n\n  &:hover,\n  &.active {\n    background-color: ${props => props.theme.secondaryColor};\n    color: #fff;\n  }\n`;","import React from 'react';\n\nimport { Ul } from './Ul';\nimport { ButtonRemove } from './Button';\nimport styled from '../theme/styled-components';\nimport { LiActive } from './Li';\n\nconst HistoryUl = styled(Ul)`\n  border-top: solid 1px;\n  border-color: ${props => props.theme.borderColor};\n`;\n\nexport const History: React.StatelessComponent<{\n  histories: any[];\n  uri: string;\n  onSelect: Function;\n  onRemove: Function;\n}> = ({ histories, uri, onSelect, onRemove }) => (\n  <HistoryUl>\n    {histories.map(history => (\n      <LiActive\n        key={history}\n        onClick={() => onSelect(history)}\n        className={history === uri ? 'active' : ''}\n      >\n        <span>{history}</span>\n\n        <ButtonRemove\n          type=\"button\"\n          value=\"X\"\n          onClick={event => {\n            event.stopPropagation();\n            onRemove(history);\n          }}\n        />\n      </LiActive>\n    ))}\n  </HistoryUl>\n);\n","import styled from '../theme/styled-components';\n\nexport const Wrapper = styled.div`\n  height: calc(100vh - 85px);\n  border: solid 1px #ccc;\n  margin: 20px;\n  margin-top: 0;\n  border-radius: 10px;\n`;\n\nexport const Column = styled.div`\n  width: 100%;\n`;\n\nexport const SchemaContainer = styled('div')<{ hasBorder?: boolean }>`\n  display: flex;\n  flex-flow: column;\n  height: 50%;\n  border-top: solid ${props => props.theme.borderColor};\n  border-width: ${props => (props.hasBorder ? '1px' : 0)};\n`;\n\nexport const SchemaHeader = styled.div`\n  font-weight: 600;\n  text-transform: uppercase;\n  padding: 10px;\n  flex: 0 1 auto;\n  background-color: #eeeeee;\n`;\n","import React from 'react';\n\nimport styled from '../theme/styled-components';\nimport { Ul } from './Ul';\nimport { SchemaContainer, SchemaHeader } from './Wrapper';\nimport { LiActive } from './Li';\n\nconst Container = styled.div`\n  height: calc(100% - 55px);\n`;\n\nconst SchemaUl = styled(Ul)`\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\nconst List: React.StatelessComponent<{\n  type: 'query' | 'mutation';\n  hasBorder?: boolean;\n  list: any[];\n  onSelect: Function;\n  schemaType: string;\n  schemaNameSelected: string;\n}> = ({ type, hasBorder, list, onSelect, schemaType, schemaNameSelected }) => (\n  <SchemaContainer hasBorder={hasBorder}>\n    <SchemaHeader>\n      {type} ({list.length})\n    </SchemaHeader>\n\n    <SchemaUl>\n      {list.map(schema => (\n        <LiActive\n          onClick={() => onSelect(type, schema)}\n          key={schema.name}\n          className={\n            schemaType === type && schemaNameSelected === schema.name\n              ? 'active'\n              : ''\n          }\n        >\n          {schema.name}\n        </LiActive>\n      ))}\n    </SchemaUl>\n  </SchemaContainer>\n);\n\nexport const SchemaList: React.StatelessComponent<{\n  queries: any[];\n  mutations: any[];\n  onSelect: Function;\n  schemaType: string;\n  schemaNameSelected: string;\n}> = ({ queries, mutations, onSelect, schemaType, schemaNameSelected }) => (\n  <Container>\n    <List\n      schemaType={schemaType}\n      schemaNameSelected={schemaNameSelected}\n      type=\"query\"\n      list={queries}\n      onSelect={onSelect}\n    />\n\n    <List\n      schemaType={schemaType}\n      schemaNameSelected={schemaNameSelected}\n      hasBorder={true}\n      type=\"mutation\"\n      list={mutations}\n      onSelect={onSelect}\n    />\n  </Container>\n);\n","import React from 'react';\n\nimport styled from '../theme/styled-components';\n\nconst HeaderStyled = styled.div`\n  text-align: center;\n  height: 50px;\n`;\n\nexport const Header = () => (\n  <HeaderStyled>\n    <h1>GraphQL Generate Code</h1>\n  </HeaderStyled>\n);\n","import styled from '../theme/styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: #eee;\n  border-top-left-radius: 10px;\n`;\n","import React from 'react';\n\nexport class CodeMirror extends React.Component<{ value: string }> {\n  elementRef: any;\n  editor: any;\n  cachedValue: string;\n\n  constructor(props: any) {\n    super(props);\n    this.cachedValue = props.value || '';\n  }\n\n  componentDidMount() {\n    const CodeMirror = require('codemirror');\n    require('codemirror/mode/javascript/javascript');\n    const { value } = this.props;\n\n    this.editor = CodeMirror(this.elementRef, {\n      mode: 'javascript',\n      theme: 'default',\n      lineNumbers: true,\n      readOnly: true,\n      value\n    });\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if (\n      this.props.value !== prevProps.value &&\n      this.props.value !== this.cachedValue\n    ) {\n      const thisValue = this.props.value || '';\n      this.cachedValue = thisValue;\n      this.editor.setValue(thisValue);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        style={{ height: 'calc(100% - 38px)' }}\n        ref={elementRef => (this.elementRef = elementRef)}\n      />\n    );\n  }\n}\n","import {\n  isGraphQLNonNull,\n  isGraphQLList,\n  isGraphQLScalarType,\n  getDeepKeys\n} from './CommonUtils';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\n\nconst { json2ts } = require('json-ts');\n\nconst prettier = require('prettier/standalone');\nconst prettierBabylon = require('prettier/parser-babylon');\nconst prettierGraphql = require('prettier/parser-graphql');\nconst prettierTS = require('prettier/parser-typescript');\nconst scalarToTypescript = {\n  Int: 0,\n  Float: 0.0,\n  String: 'String',\n  Boolean: true,\n  ID: 'String',\n  Date: 'String',\n  Email: 'String'\n};\n\nfunction getArgs(schema: any): string {\n  const args: any[] = schema.args;\n  if (args && args.length) {\n    let rs = args\n      .map(arg => {\n        const { type } = arg;\n        let str = '';\n        if (type) {\n          str = `$${arg.name}: ${type.ofType ? type.ofType : type.name}`;\n          if (isGraphQLNonNull(arg.type)) {\n            str += '!';\n          }\n        }\n        return str;\n      })\n      .join(`\\n`);\n    return rs ? `(${rs})` : rs;\n  }\n  return '';\n}\n\nfunction getParams(schema: any): string {\n  const args: any[] = schema.args;\n  if (args && args.length) {\n    let rs = args.map(arg => `${arg.name}: $${arg.name}`).join(`\\n`);\n    return rs ? `(${rs})` : rs;\n  }\n  return '';\n}\n\nfunction getFields(schema: any) {\n  const { type } = schema;\n  if (!type) {\n    return null;\n  }\n  if (isGraphQLList(type) && isGraphQLScalarType(type.ofType)) {\n    return type.ofType['_fields'];\n  }\n  return type['_fields'];\n}\n\nfunction getSchemaName(schema: any) {\n  const { type } = schema;\n  if (!type) {\n    return null;\n  }\n  if (isGraphQLList(type) && isGraphQLScalarType(type.ofType)) {\n    return type.ofType['name'];\n  }\n  return type['name'];\n}\n\nfunction getResponseObj(\n  schema: any,\n  deepKeys: any[] = [],\n  parentIndex?: any\n): object {\n  const keys = Object.keys(schema);\n  const obj = {};\n  try {\n    keys.forEach(key => {\n      const name = schema[key].name;\n      const fields = getFields(schema[key]);\n\n      const schemaName = getSchemaName(schema[key]);\n\n      if (!fields) {\n        let value = scalarToTypescript[schema[key].type.name];\n        obj[name] = value || 'String';\n      } else {\n        const isAddedBefore = deepKeys.find(\n          k => k.schemaName === schemaName && k.parentIndex !== parentIndex\n        );\n        if (!isAddedBefore) {\n          const index = (parentIndex || 0) + 1;\n          deepKeys.push({\n            schemaName,\n            parentIndex: parentIndex || 0,\n            index\n          });\n\n          obj[name] = getResponseObj(fields, deepKeys, index);\n        }\n      }\n    });\n    return obj;\n  } catch (error) {\n    return {};\n  }\n}\n\nfunction prettifyGraphQL(str: string) {\n  return prettier.format(str, {\n    parser: 'babel',\n    printWidth: 40,\n    plugins: [prettierBabylon, prettierGraphql]\n  });\n}\n\nfunction prettifyTS(str: string) {\n  return prettier.format(str, {\n    parser: 'typescript',\n    printWidth: 40,\n    plugins: [prettierTS]\n  });\n}\n\nexport function GetAllTemplates(\n  schemaType: string,\n  schema: any\n): { graphql: string; typescript: string } {\n  const schemaName = schema.name;\n  const args = getArgs(schema);\n  const params = getParams(schema);\n  const fields = getFields(schema);\n  let obj = {},\n    jsonQuery = '';\n\n  if (fields) {\n    obj = getResponseObj(fields);\n    jsonQuery = `{ ${jsonToGraphQLQuery(obj)} }`;\n  }\n\n  const graphlStr = `\n    const ${schemaName} = { ${schemaName}: gql\\`\n      ${schemaType} ${schemaName}\n        ${args} {\n          ${schemaName}\n          ${params}\n          ${jsonQuery}\n      }\n      \\`\n  }`;\n  const graphql = prettifyGraphQL(graphlStr);\n\n  const typescriptStr = json2ts(JSON.stringify(obj));\n  const typescript = prettifyTS(typescriptStr);\n\n  return {\n    graphql,\n    typescript\n  };\n}\n","import React, { Component } from 'react';\nimport { introspectSchema } from 'graphql-tools';\nimport { HttpLink } from 'apollo-link-http';\nimport Split from 'react-split';\nimport styled from 'styled-components';\n\nimport './App.scss';\nimport { Input } from './components/Input';\nimport { ThemeProvider } from './theme/styled-components';\nimport { ThemeDefault } from './theme/theme';\nimport { ButtonPrimary } from './components/Button';\nimport { isValidUri, filterSchema } from './utils/CommonUtils';\nimport { History } from './components/History';\nimport { SchemaList } from './components/SchemaList';\nimport { Header } from './components/Header';\nimport {\n  Wrapper,\n  Column,\n  SchemaHeader,\n  SchemaContainer\n} from './components/Wrapper';\nimport { Form } from './components/Form';\nimport { CodeMirror } from './components/CodeMirror';\nimport { GetAllTemplates } from './utils/TemplateBuilder';\n\nconst ResultHeader = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  text-transform: uppercase;\n  padding: 10px;\n  background-color: #eee;\n`;\n\nclass App extends Component {\n  state = {\n    uri: '',\n    schema: null,\n    queries: [],\n    mutations: [],\n    histories: [],\n    graphql: '',\n    typescript: '',\n    schemaSelected: null,\n    schemaType: null,\n    textSearchSchema: ''\n  };\n\n  componentDidMount() {\n    const histories = localStorage.getItem('HISTORY');\n    if (histories) {\n      this.setState({ histories: JSON.parse(histories) });\n    }\n  }\n\n  showLinkError() {\n    alert('Link is invalid');\n  }\n\n  updateHistory(histories: string[]) {\n    this.setState({ histories });\n    localStorage.setItem('HISTORY', JSON.stringify(histories));\n  }\n\n  addHistory(uri: string) {\n    const histories: string[] = this.state.histories;\n    if (!histories.includes(uri)) {\n      histories.unshift(uri);\n      this.updateHistory(histories);\n    }\n  }\n\n  removeHistory(uri: string) {\n    const histories: string[] = this.state.histories;\n    const index = histories.findIndex(h => h === uri);\n    if (index > -1) {\n      histories.splice(index, 1);\n      this.updateHistory(histories);\n    }\n  }\n\n  async handleSubmit(uri: string) {\n    if (!isValidUri(uri)) {\n      this.showLinkError();\n      return;\n    }\n    this.setState({ uri });\n    const link = new HttpLink({\n      uri,\n      fetch\n    });\n    try {\n      const schema = await introspectSchema(link);\n      let queries, mutations;\n      const queriesObj = schema.getQueryType();\n      const mutationsObj = schema.getMutationType();\n      if (queriesObj || mutationsObj) {\n        this.addHistory(uri);\n\n        if (queriesObj) {\n          const fields = queriesObj.getFields();\n          queries = Object.keys(fields).map(v => ({\n            ...fields[v]\n          }));\n        }\n        if (mutationsObj) {\n          const fields = mutationsObj.getFields();\n          mutations = Object.keys(fields).map(v => ({\n            ...fields[v]\n          }));\n        }\n\n        this.setState({\n          schema,\n          queries,\n          mutations\n        });\n      } else {\n        this.showLinkError();\n      }\n    } catch (error) {\n      this.showLinkError();\n    }\n  }\n\n  _renderResult() {\n    const { graphql, typescript } = this.state;\n    return (\n      <div style={{ height: '100%' }}>\n        <SchemaContainer>\n          <SchemaHeader>GraphQL</SchemaHeader>\n          <CodeMirror value={graphql} />\n        </SchemaContainer>\n\n        <SchemaContainer>\n          <SchemaHeader>Typescript</SchemaHeader>\n          <CodeMirror value={typescript} />\n        </SchemaContainer>\n      </div>\n    );\n  }\n\n  _renderHistory() {\n    const { histories, uri } = this.state;\n\n    return (\n      <History\n        histories={histories}\n        uri={uri}\n        onSelect={(history: string) => this.handleSubmit(history)}\n        onRemove={(history: string) => this.removeHistory(history)}\n      />\n    );\n  }\n\n  _renderForm() {\n    const { uri } = this.state;\n\n    return (\n      <Form\n        onSubmit={event => {\n          event.preventDefault();\n          this.handleSubmit(uri);\n        }}\n      >\n        <Input\n          placeholder=\"GraphQL URL...\"\n          value={uri}\n          onChange={event => this.setState({ uri: event.target.value })}\n        />\n        <ButtonPrimary type=\"submit\" value=\"Submit\" />\n      </Form>\n    );\n  }\n\n  _renderSchema() {\n    const {\n      queries,\n      mutations,\n      textSearchSchema,\n      schemaSelected,\n      schemaType\n    } = this.state;\n\n    const queriesFiltered = filterSchema(queries, textSearchSchema);\n    const mutationsFiltered = filterSchema(mutations, textSearchSchema);\n\n    return (\n      <>\n        <div style={{ padding: 10, display: 'flex' }}>\n          <Input\n            placeholder=\"Search schema...\"\n            value={textSearchSchema}\n            onChange={event =>\n              this.setState({ textSearchSchema: event.target.value })\n            }\n          />\n        </div>\n\n        <SchemaList\n          schemaNameSelected={(schemaSelected && schemaSelected['name']) || ''}\n          schemaType={schemaType || ''}\n          queries={queriesFiltered}\n          mutations={mutationsFiltered}\n          onSelect={(schemaType: string, schemaSelected: any) =>\n            this.setState({ schemaType, schemaSelected }, () => {\n              const { graphql, typescript } = GetAllTemplates(\n                schemaType,\n                schemaSelected\n              );\n              this.setState({ graphql, typescript });\n            })\n          }\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={ThemeDefault}>\n        <>\n          <Header />\n\n          <Wrapper>\n            <Split\n              style={{ display: 'flex', flexDirection: 'row', height: '100%' }}\n              direction=\"horizontal\"\n              minSize={320}\n              sizes={[33, 33, 34]}\n            >\n              <Column>\n                {this._renderForm()}\n\n                {this._renderHistory()}\n              </Column>\n\n              <Column>{this._renderSchema()}</Column>\n\n              <Column>{this._renderResult()}</Column>\n            </Split>\n          </Wrapper>\n        </>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}