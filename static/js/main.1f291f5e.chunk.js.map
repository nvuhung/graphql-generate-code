{"version":3,"sources":["theme/styled-components.ts","components/Input.tsx","theme/theme.ts","components/Button.tsx","utils/CommonUtils.ts","utils/TemplateBuilder.ts","components/Ul.tsx","components/History.tsx","components/SchemaList.tsx","components/Header.tsx","components/Wrapper.tsx","components/Form.tsx","components/CodeMirror.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styled","default","ThemeProvider","css","createGlobalStyle","keyframes","Input","input","_templateObject","props","theme","primaryColor","ThemeDefault","secondaryColor","borderColor","ButtonPrimary","Button_templateObject","ButtonRemove","_templateObject2","isGraphQLNonNull","object","isGraphQLList","isGraphQLScalarType","json2ts","require","prettier","prettierBabylon","prettierGraphql","prettierTS","scalarToTypescript","Int","Float","String","Boolean","ID","Date","Email","getFields","schema","type","ofType","getResponseObj","keys","Object","obj","forEach","key","name","fields","value","error","GetSchemaTemplate","schemaType","str","schemaName","args","length","rs","map","arg","concat","join","getArgs","params","getParams","response","jsonQuery","jsonToGraphQLQuery","getResponse","template","format","parser","printWidth","plugins","GetTypescript","typescriptStr","JSON","stringify","Ul","ul","Ul_templateObject","Item","History_templateObject","isActive","HistoryUl","History_templateObject2","History","_ref","histories","uri","onSelect","onRemove","react_default","a","createElement","history","onClick","event","stopPropagation","Container","div","SchemaList_templateObject","SchemaContainer","SchemaList_templateObject2","hasBorder","SchemaHeader","_templateObject3","SchemaUl","_templateObject4","SchemaLi","li","_templateObject5","List","list","SchemaList","_ref2","queries","mutations","SchemaList_List","HeaderStyled","Header_templateObject","Header","Wrapper","Wrapper_templateObject","Column","Wrapper_templateObject2","Form","form","Form_templateObject","CodeMirror","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","elementRef","editor","cachedValue","inherits","createClass","mode","lineNumbers","readOnly","prevProps","thisValue","setValue","_this2","ref","React","Component","App","state","schemaTemplate","typescript","schemaSelected","localStorage","getItem","setState","parse","alert","setItem","includes","unshift","updateHistory","index","findIndex","h","splice","url","showLinkError","link","HttpLink","fetch","introspectSchema","queriesObj","getQueryType","mutationsObj","getMutationType","addHistory","v","objectSpread","_this$state","react_split_es","style","display","flexDirection","direction","sizes","CodeMirror_CodeMirror","_this$state2","History_History","handleSubmit","removeHistory","_this3","className","onSubmit","preventDefault","placeholder","onChange","target","_this4","_this$state3","SchemaList_SchemaList","console","log","Fragment","Header_Header","height","_renderForm","_renderHistory","_renderSchema","_renderResult","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f291f5e.chunk.js","sourcesContent":["import * as styledComponents from 'styled-components';\n\nexport interface ThemeInterface {\n  primaryColor: string;\n  secondaryColor: string;\n  borderColor: string;\n}\n\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<\n  ThemeInterface\n>;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\nexport default styled;\n","import styled from '../theme/styled-components';\n\nexport const Input = styled.input`\n  border: 1px solid;\n  border-color: ${props => props.theme.primaryColor};\n  border-radius: 40px;\n  height: 24px;\n  padding: 4px 15px;\n  width: 100%;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { ThemeInterface } from './styled-components';\n\nexport const ThemeDefault: ThemeInterface = {\n  primaryColor: '#2185d0',\n  secondaryColor: '#53b5ff',\n  borderColor: '#ccc'\n};\n","import styled from '../theme/styled-components';\n\nexport const ButtonPrimary = styled.input`\n  cursor: pointer;\n  padding: 10px 20px;\n  background-color: ${props => props.theme.primaryColor};\n  color: #fff;\n  text-align: center;\n  line-height: 14px;\n  border-radius: 40px;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  margin-left: 10px;\n\n  &:hover {\n    background-color: ${props => props.theme.secondaryColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ButtonRemove = styled.input`\n  outline: none;\n  box-shadow: none;\n  border-radius: 50%;\n  cursor: pointer;\n  border: solid 1px red;\n  color: red;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { GraphQLNonNull, GraphQLList, GraphQLScalarType } from 'graphql';\n\nexport const isGraphQLNonNull = (object: any): object is GraphQLNonNull<any> =>\n  'ofType' in object;\n\nexport const isGraphQLList = (object: any): object is GraphQLList<any> =>\n  'ofType' in object;\n\nexport const isGraphQLScalarType = (object: any): object is GraphQLScalarType =>\n  'name' in object;\n\nexport const isValidUri = (url: string): boolean =>\n  !!url && url.includes('http') && url.includes('/graphql');\n","import {\n  isGraphQLNonNull,\n  isGraphQLList,\n  isGraphQLScalarType\n} from './CommonUtils';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\nimport { object } from 'prop-types';\n\nconst { json2ts } = require('json-ts');\n\nconst prettier = require('prettier/standalone');\nconst prettierBabylon = require('prettier/parser-babylon');\nconst prettierGraphql = require('prettier/parser-graphql');\nconst prettierTS = require('prettier/parser-typescript');\nconst scalarToTypescript = {\n  Int: 0,\n  Float: 0.0,\n  String: 'String',\n  Boolean: true,\n  ID: 'String',\n  Date: 'String',\n  Email: 'String'\n};\n\nfunction getArgs(schema: any): string {\n  const args: any[] = schema.args;\n  if (args && args.length) {\n    let rs = args\n      .map(arg => {\n        const { type } = arg;\n        let str = '';\n        if (type) {\n          str = `$${arg.name}: ${type.ofType ? type.ofType : type.name}`;\n          if (isGraphQLNonNull(arg.type)) {\n            str += '!';\n          }\n        }\n        return str;\n      })\n      .join(`\\n`);\n    return rs ? `(${rs})` : rs;\n  }\n  return '';\n}\n\nfunction getParams(schema: any): string {\n  const args: any[] = schema.args;\n  if (args && args.length) {\n    let rs = args.map(arg => `${arg.name}: $${arg.name}`).join(`\\n`);\n    return rs ? `(${rs})` : rs;\n  }\n  return '';\n}\n\nfunction getFields(schema: any) {\n  const { type } = schema;\n  if (!type) {\n    return null;\n  }\n  if (isGraphQLList(type) && isGraphQLScalarType(type.ofType)) {\n    return type.ofType['_fields'];\n  }\n  return type['_fields'];\n}\n\nfunction getResponseObj(schema: any): object {\n  const keys = Object.keys(schema);\n  const obj = {};\n  try {\n    keys.forEach(key => {\n      const name = schema[key].name;\n      const fields = getFields(schema[key]);\n      if (!fields) {\n        let value = scalarToTypescript[schema[key].type.name];\n        obj[name] = value || 'String';\n      } else {\n        obj[name] = getResponseObj(fields);\n      }\n    });\n    return obj;\n  } catch (error) {\n    return {};\n  }\n}\n\nfunction getResponse(schema: any): string {\n  try {\n    const fields = getFields(schema);\n    if (fields) {\n      const obj = getResponseObj(fields);\n      const jsonQuery = jsonToGraphQLQuery(obj);\n      return `{ ${jsonQuery} }`;\n    }\n    return '';\n  } catch (error) {\n    return '';\n  }\n}\n\nfunction prettifyGraphQL(str: string) {\n  return prettier.format(str, {\n    parser: 'babel',\n    printWidth: 40,\n    plugins: [prettierBabylon, prettierGraphql]\n  });\n}\n\nfunction prettifyTS(str: string) {\n  return prettier.format(str, {\n    parser: 'typescript',\n    printWidth: 40,\n    plugins: [prettierTS]\n  });\n}\n\nexport function GetSchemaTemplate(schemaType: string, schema: any): string {\n  const schemaName = schema.name;\n  const args = getArgs(schema);\n  const params = getParams(schema);\n  const response = getResponse(schema);\n\n  let template = `\n    const ${schemaName} = { ${schemaName}: gql\\`\n      ${schemaType} ${schemaName}\n        ${args} {\n          ${schemaName}\n          ${params}\n          ${response}\n      }\n      \\`\n  }`;\n\n  return prettifyGraphQL(template);\n}\n\nexport function GetTypescript(schema: any): string {\n  const fields = getFields(schema);\n  if (fields) {\n    const obj = getResponseObj(fields);\n    const typescriptStr = json2ts(JSON.stringify(obj));\n    return prettifyTS(typescriptStr);\n  }\n  return '';\n}\n","import styled from '../theme/styled-components';\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;","import React from 'react';\n\nimport { Ul } from './Ul';\nimport { ButtonRemove } from './Button';\nimport styled from '../theme/styled-components';\n\nconst Item = styled('li')<{ isActive: boolean }>`\n  padding: 10px;\n  border-bottom: solid 1px;\n  border-color: ${props => props.theme.borderColor};\n  display: flex;\n  justify-content: space-between;\n  color: ${props => (props.isActive ? props.theme.primaryColor : '#000')};\n\n  &:hover {\n    background-color: ${props => props.theme.secondaryColor};\n    cursor: pointer;\n    color: #fff;\n  }\n`;\n\nconst HistoryUl = styled(Ul)`\n  border-top: solid 1px;\n  border-color: ${props => props.theme.borderColor};\n`;\n\nexport const History: React.StatelessComponent<{\n  histories: any[];\n  uri: string;\n  onSelect: Function;\n  onRemove: Function;\n}> = ({ histories, uri, onSelect, onRemove }) => (\n  <HistoryUl>\n    {histories.map(history => (\n      <Item\n        key={history}\n        onClick={() => onSelect(history)}\n        isActive={history === uri}\n      >\n        <span>{history}</span>\n\n        <ButtonRemove\n          type=\"button\"\n          value=\"X\"\n          onClick={event => {\n            event.stopPropagation();\n            onRemove(history);\n          }}\n        />\n      </Item>\n    ))}\n  </HistoryUl>\n);\n","import React from 'react';\n\nimport styled from '../theme/styled-components';\nimport { Ul } from './Ul';\n\nconst Container = styled.div`\n  height: 100%;\n`;\n\nconst SchemaContainer = styled('div')<{ hasBorder?: boolean }>`\n  display: flex;\n  flex-flow: column;\n  height: 50%;\n  border-top: solid ${props => props.theme.borderColor};\n  border-width: ${props => (props.hasBorder ? '1px' : 0)};\n`;\n\nconst SchemaHeader = styled.div`\n  color: rgba(0, 0, 0, 0.3);\n  cursor: default;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  user-select: none;\n  padding: 10px;\n  flex: 0 1 auto;\n`;\n\nconst SchemaUl = styled(Ul)`\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\nconst SchemaLi = styled.li`\n  padding: 10px;\n\n  &:hover {\n    background-color: ${props => props.theme.secondaryColor};\n    cursor: pointer;\n    color: #fff;\n  }\n`;\n\nconst List: React.StatelessComponent<{\n  type: 'query' | 'mutation';\n  hasBorder?: boolean;\n  list: any[];\n  onSelect: Function;\n}> = ({ type, hasBorder, list, onSelect }) => (\n  <SchemaContainer hasBorder={hasBorder}>\n    <SchemaHeader>\n      {type} ({list.length})\n    </SchemaHeader>\n\n    <SchemaUl>\n      {list.map(schema => (\n        <SchemaLi onClick={() => onSelect(type, schema)} key={schema.name}>\n          {schema.name}\n        </SchemaLi>\n      ))}\n    </SchemaUl>\n  </SchemaContainer>\n);\n\nexport const SchemaList: React.StatelessComponent<{\n  queries: any[];\n  mutations: any[];\n  onSelect: Function;\n}> = ({ queries, mutations, onSelect }) => (\n  <Container>\n    <List type=\"query\" list={queries} onSelect={onSelect} />\n    <List\n      hasBorder={true}\n      type=\"mutation\"\n      list={mutations}\n      onSelect={onSelect}\n    />\n  </Container>\n);\n","import React from 'react';\n\nimport styled from '../theme/styled-components';\n\nconst HeaderStyled = styled.div`\n  text-align: center;\n  height: 60px;\n`;\n\nexport const Header = () => (\n  <HeaderStyled>\n    <h1>GraphQL Generate Code</h1>\n  </HeaderStyled>\n);\n","import styled from '../theme/styled-components';\n\nexport const Wrapper = styled.div`\n  height: calc(100vh - 140px);\n  border: solid 1px #ccc;\n  margin: 20px;\n  border-radius: 10px;\n`;\n\nexport const Column = styled.div`\n  width: 100%;\n`;\n","import styled from '../theme/styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: #eee;\n  border-top-left-radius: 10px;\n`;\n","import React from 'react';\n\nexport class CodeMirror extends React.Component<{ value: string }> {\n  elementRef: any;\n  editor: any;\n  cachedValue: string;\n\n  constructor(props: any) {\n    super(props);\n    this.cachedValue = props.value || '';\n  }\n\n  componentDidMount() {\n    const CodeMirror = require('codemirror');\n    require('codemirror/mode/javascript/javascript');\n    const { value } = this.props;\n\n    this.editor = CodeMirror(this.elementRef, {\n      mode: 'javascript',\n      theme: 'default',\n      lineNumbers: true,\n      readOnly: true,\n      value\n    });\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if (\n      this.props.value !== prevProps.value &&\n      this.props.value !== this.cachedValue\n    ) {\n      const thisValue = this.props.value || '';\n      this.cachedValue = thisValue;\n      this.editor.setValue(thisValue);\n    }\n  }\n\n  render() {\n    return <div ref={elementRef => (this.elementRef = elementRef)} />;\n  }\n}\n","import React, { Component } from 'react';\nimport { introspectSchema } from 'graphql-tools';\nimport { HttpLink } from 'apollo-link-http';\nimport Split from 'react-split';\n\nimport './App.scss';\nimport { Input } from './components/Input';\nimport { ThemeProvider } from './theme/styled-components';\nimport { ThemeDefault } from './theme/theme';\nimport { ButtonPrimary } from './components/Button';\nimport { isValidUri } from './utils/CommonUtils';\nimport { GetSchemaTemplate, GetTypescript } from './utils/TemplateBuilder';\nimport { History } from './components/History';\nimport { SchemaList } from './components/SchemaList';\nimport { Header } from './components/Header';\nimport { Wrapper, Column } from './components/Wrapper';\nimport { Form } from './components/Form';\nimport { CodeMirror } from './components/CodeMirror';\n\nclass App extends Component {\n  state = {\n    uri: '',\n    schema: null,\n    queries: [],\n    mutations: [],\n    histories: [],\n    schemaTemplate: '',\n    typescript: '',\n    schemaSelected: null,\n    schemaType: null\n  };\n\n  componentDidMount() {\n    const histories = localStorage.getItem('HISTORY');\n    if (histories) {\n      this.setState({ histories: JSON.parse(histories) });\n    }\n  }\n\n  showLinkError() {\n    alert('Link is invalid');\n  }\n\n  updateHistory(histories: string[]) {\n    this.setState({ histories });\n    localStorage.setItem('HISTORY', JSON.stringify(histories));\n  }\n\n  addHistory(uri: string) {\n    const histories: string[] = this.state.histories;\n    if (!histories.includes(uri)) {\n      histories.unshift(uri);\n      this.updateHistory(histories);\n    }\n  }\n\n  removeHistory(uri: string) {\n    const histories: string[] = this.state.histories;\n    const index = histories.findIndex(h => h === uri);\n    if (index > -1) {\n      histories.splice(index, 1);\n      this.updateHistory(histories);\n    }\n  }\n\n  async handleSubmit(uri: string) {\n    if (!isValidUri(uri)) {\n      this.showLinkError();\n      return;\n    }\n    this.setState({ uri });\n    const link = new HttpLink({\n      uri,\n      fetch\n    });\n    try {\n      const schema = await introspectSchema(link);\n      let queries, mutations;\n      const queriesObj = schema.getQueryType();\n      const mutationsObj = schema.getMutationType();\n      if (queriesObj || mutationsObj) {\n        this.addHistory(uri);\n\n        if (queriesObj) {\n          const fields = queriesObj.getFields();\n          queries = Object.keys(fields).map(v => ({\n            ...fields[v]\n          }));\n        }\n        if (mutationsObj) {\n          const fields = mutationsObj.getFields();\n          mutations = Object.keys(fields).map(v => ({\n            ...fields[v]\n          }));\n        }\n\n        this.setState({\n          schema,\n          queries,\n          mutations\n        });\n      } else {\n        this.showLinkError();\n      }\n    } catch (error) {\n      this.showLinkError();\n    }\n  }\n\n  _renderResult() {\n    const { schemaTemplate, typescript } = this.state;\n    return (\n      <Split\n        style={{ display: 'flex', flexDirection: 'column' }}\n        direction=\"vertical\"\n        sizes={[50, 50]}\n      >\n        <div>\n          <h1>GraphQL</h1>\n          <CodeMirror value={schemaTemplate} />\n        </div>\n        <div>\n          <h1>Typescript</h1>\n          <CodeMirror value={typescript} />\n        </div>\n      </Split>\n    );\n  }\n\n  _renderHistory() {\n    const { histories, uri } = this.state;\n\n    return (\n      <History\n        histories={histories}\n        uri={uri}\n        onSelect={(history: string) => this.handleSubmit(history)}\n        onRemove={(history: string) => this.removeHistory(history)}\n      />\n    );\n  }\n\n  _renderForm() {\n    const { uri } = this.state;\n\n    return (\n      <Form\n        className=\"form\"\n        onSubmit={event => {\n          event.preventDefault();\n          this.handleSubmit(uri);\n        }}\n      >\n        <Input\n          placeholder=\"GraphQL URL...\"\n          value={uri}\n          onChange={event => this.setState({ uri: event.target.value })}\n        />\n        <ButtonPrimary type=\"submit\" value=\"Submit\" />\n      </Form>\n    );\n  }\n\n  _renderSchema() {\n    const { queries, mutations } = this.state;\n\n    return (\n      <SchemaList\n        queries={queries}\n        mutations={mutations}\n        onSelect={(schemaType: string, schemaSelected: any) =>\n          this.setState({ schemaType, schemaSelected }, () => {\n            const schemaTemplate = GetSchemaTemplate(\n              schemaType,\n              schemaSelected\n            );\n            const typescript = GetTypescript(schemaSelected);\n            console.log(typescript);\n            this.setState({ schemaTemplate, typescript });\n          })\n        }\n      />\n    );\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={ThemeDefault}>\n        <>\n          <Header />\n\n          <Wrapper>\n            <Split\n              style={{ display: 'flex', flexDirection: 'row', height: '100%' }}\n              direction=\"horizontal\"\n              sizes={[33, 33, 34]}\n            >\n              <Column>\n                {this._renderForm()}\n\n                {this._renderHistory()}\n              </Column>\n\n              <Column>{this._renderSchema()}</Column>\n\n              <Column>{this._renderResult()}</Column>\n            </Split>\n          </Wrapper>\n        </>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}